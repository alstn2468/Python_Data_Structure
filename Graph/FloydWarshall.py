# FloydWarshall.py

import numpy as np

graph = np.array(
	[[0, 2, 100, 3, 100, 100, 100],
	 [100, 0, 7, 100, 1, 100, 100],
	 [100, 100 , 0, 100, 100, 2, 100],
	 [100, 1, 100, 0, 100, 100, 100],
	 [100, 100, 7, 100, 0, 100, 4],
	 [100, 100, 100, 100, 4, 0, 2],
	 [1, 100, 100, 1, 100, 100, 0]])

v = len(graph)

p = np.zeros(graph.shape)

for i in range(0, v):
	for j in range(0, v):
		p[i, j] = graph[i, j]

print("Initial Adjacency Matrix")
print(p, "\n")

for k in range(0,v):
	print('Vertex ', k + 1)

	for i in range(0, v):
		for j in range(0, v):
			if p[i, j] > p[i, k] + p[k, j]:
				p[i, j] = p[i, k] + p[k, j]

	print(p, "\n")

'''
Initial Adjacency Matrix
[[   0.    2.  100.    3.  100.  100.  100.]
 [ 100.    0.    7.  100.    1.  100.  100.]
 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.  100.    0.  100.  100.  100.]
 [ 100.  100.    7.  100.    0.  100.    4.]
 [ 100.  100.  100.  100.    4.    0.    2.]
 [   1.  100.  100.    1.  100.  100.    0.]]

Vertex  1
[[   0.    2.  100.    3.  100.  100.  100.]
 [ 100.    0.    7.  100.    1.  100.  100.]

 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.  100.    0.  100.  100.  100.]
 [ 100.  100.    7.  100.    0.  100.    4.]
 [ 100.  100.  100.  100.    4.    0.    2.]
 [   1.    3.  100.    1.  100.  100.    0.]]

Vertex  2
[[   0.    2.    9.    3.    3.  100.  100.]
 [ 100.    0.    7.  100.    1.  100.  100.]
 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.    8.    0.    2.  100.  100.]
 [ 100.  100.    7.  100.    0.  100.    4.]
 [ 100.  100.  100.  100.    4.    0.    2.]
 [   1.    3.   10.    1.    4.  100.    0.]]

Vertex  3
[[   0.    2.    9.    3.    3.   11.  100.]
 [ 100.    0.    7.  100.    1.    9.  100.]
 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.    8.    0.    2.   10.  100.]
 [ 100.  100.    7.  100.    0.    9.    4.]
 [ 100.  100.  100.  100.    4.    0.    2.]
 [   1.    3.   10.    1.    4.   12.    0.]]

Vertex  4
[[   0.    2.    9.    3.    3.   11.  100.]
 [ 100.    0.    7.  100.    1.    9.  100.]
 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.    8.    0.    2.   10.  100.]
 [ 100.  100.    7.  100.    0.    9.    4.]
 [ 100.  100.  100.  100.    4.    0.    2.]
 [   1.    2.    9.    1.    3.   11.    0.]]

Vertex  5
[[   0.    2.    9.    3.    3.   11.    7.]
 [ 100.    0.    7.  100.    1.    9.    5.]
 [ 100.  100.    0.  100.  100.    2.  100.]
 [ 100.    1.    8.    0.    2.   10.    6.]
 [ 100.  100.    7.  100.    0.    9.    4.]
 [ 100.  100.   11.  100.    4.    0.    2.]
 [   1.    2.    9.    1.    3.   11.    0.]]

Vertex  6
[[   0.    2.    9.    3.    3.   11.    7.]
 [ 100.    0.    7.  100.    1.    9.    5.]
 [ 100.  100.    0.  100.    6.    2.    4.]
 [ 100.    1.    8.    0.    2.   10.    6.]
 [ 100.  100.    7.  100.    0.    9.    4.]
 [ 100.  100.   11.  100.    4.    0.    2.]
 [   1.    2.    9.    1.    3.   11.    0.]]

Vertex  7
[[  0.   2.   9.   3.   3.  11.   7.]
 [  6.   0.   7.   6.   1.   9.   5.]
 [  5.   6.   0.   5.   6.   2.   4.]
 [  7.   1.   8.   0.   2.  10.   6.]
 [  5.   6.   7.   5.   0.   9.   4.]
 [  3.   4.  11.   3.   4.   0.   2.]
 [  1.   2.   9.   1.   3.  11.   0.]]
'''
